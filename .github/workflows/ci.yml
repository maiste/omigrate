name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    name: Build & test - Linux

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - ocaml-base-compiler.4.14.0

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: ${{ runner.os != 'macOS' }}

      - name: Install dependencies
        run: opam install --deps-only --with-test .

      - name: Install ocamlformat
        run: opam install ocamlformat.0.21.0

      - name: Build project
        run: opam exec -- dune build @install

      - name: Run tests
        run: GITHUB_TESTS=false opam exec -- dune test

      - name: Format code
        run: opam exec -- dune build --auto-promote @fmt

  build-macos:
    name: Build - MacOS

    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - ocaml-base-compiler.4.14.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install dependencies
        run: opam install --deps-only --with-test .

      - name: Install ocamlformat
        run: opam install ocamlformat.0.21.0

      - name: Build project
        run: opam exec -- dune build @install



